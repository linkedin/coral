apply plugin: "com.diffplug.spotless"

spotless {
  sql {
    target 'src/main/resources/macros/coral_macros/**/**/*.sql'
    licenseHeaderFile(rootProject.file("gradle/license/LICENSE_HEADER"), "\\{% ")
  }
  python {
    target 'src/main/resources/tests/*.py'
    licenseHeaderFile(rootProject.file("gradle/license/PYTHON_LICENSE_HEADER"), "import")
  }
}

task runCoralDbtTests {
  def runTest = false

  // Ensure pip is installed
  try {
    println("Ensuring pip is installed...")
    def ensurePipProcessBuilder = new ProcessBuilder([
      'python3',
      '-m',
      'ensurepip',
      '--upgrade'
    ])
    def ensurePipProcess = ensurePipProcessBuilder.start()
    ensurePipProcess.waitFor()
  } catch (Exception e) {
    println("Pip installation failed. Trying dependency installation regardless.")
  }

  // Install Python dependencies
  try {
    println("Installing Python dependencies...")
    def installModulesProcessBuilder = new ProcessBuilder([
      'python3',
      '-m',
      'pip',
      'install',
      '-r',
      'requirements.txt'
    ])
    installModulesProcessBuilder.directory(file('src/main/resources/tests'))
    def installModulesProcess = installModulesProcessBuilder.start()
    installModulesProcess.waitFor()
    runTest = true
  } catch (Exception e) {
    println("Dependency installation failed. Skipping coral-dbt tests.")
  }

  // Run tests
  if (runTest) {
    try {
      println("Running coral-dbt tests...")
      def runTestsProcessBuilder = new ProcessBuilder([
        'python3',
        '-m',
        'unittest',
        '-v'
      ])
      runTestsProcessBuilder.directory(file('src/main/resources/tests'))
      def runTestsProcess = runTestsProcessBuilder.start()
      runTestsProcess.waitFor()

      // Collect errors and throw exception on non-zero exit code
      def errorStream = runTestsProcess.getErrorStream()
      def buffReader = new BufferedReader(new InputStreamReader(errorStream))
      def stringBuilder = new StringBuilder()
      def newLine
      while ((newLine = buffReader.readLine()) != null) {
        stringBuilder.append(newLine + "\n")
      }
      def errorOutput = stringBuilder.toString()
      if (runTestsProcess.exitValue() != 0) {
        throw new GradleException(errorOutput)
      }
      println(errorOutput)
    } catch (Exception e) {
      println("coral-dbt tests failed with exception: \n" + e.toString())
      println("Ignoring coral-dbt build failure and continuing build process...")
    }
  }
}

build.dependsOn 'runCoralDbtTests'
