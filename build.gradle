// Copyright 2019-2020 LinkedIn Corporation. All rights reserved.
// Licensed under the BSD-2 Clause license.
// See LICENSE in the project root for license information.

plugins {
  id "com.diffplug.spotless" version "5.8.2"
  id 'com.github.johnrengelman.shadow' version '5.2.0'
  // The following Shipkit plugins are required to make Shipkit skip publishing to Bintray.
  // Bintray is sunset starting 3/1/2021.
  // For more details on how to integrate Shipkit with other repositories please see
  // https://github.com/mockito/shipkit/blob/master/docs/features/publishing-binaries-using-maven-publish-plugin.md
  id "org.shipkit.travis" version "2.3.4"
  id "org.shipkit.github-pom-contributors" version "2.3.4"
  id "org.shipkit.release-notes" version "2.3.4"
  id "org.shipkit.compare-publications" version "2.3.4"
}

configurations {
  provided
}

allprojects {
  group = "com.linkedin.coral"
  apply plugin: "com.diffplug.spotless"

  repositories {
    mavenCentral()
  }

  spotless {
    ratchetFrom 'origin/master'
    groovyGradle {
      target '**/*.gradle'
      endWithNewline()
      greclipse().configFile("${rootDir}/gradle/spotless/codestyle-eclipse.xml")
    }
    format 'markdown', {
      target '**/*.md'
      targetExclude 'docs/release-notes.md'
      endWithNewline()
      // Disabling Prettier since it causes TravisCI to barf
      // prettier()
    }
  }
}
tasks.updateReleaseNotes.publicationRepository = "https://repo1.maven.org/maven2/com/linkedin/coral/"
tasks.updateReleaseNotesOnGitHub.publicationRepository = "https://repo1.maven.org/maven2/com/linkedin/coral/"

subprojects { subproject ->
  plugins.withType(JavaPlugin) {
    dependencies {
      testCompile deps.'testing'
    }
    test {
      useTestNG()
    }
    spotless {
      java {
        importOrder('java', 'javax', 'com', 'org', 'com.linkedin.coral', '\\#')
        removeUnusedImports()
        eclipse().configFile("${rootDir}/gradle/spotless/codestyle-eclipse.xml")
        licenseHeaderFile file("${rootDir}/gradle/license/LICENSE_HEADER")
      }
    }
  }

  apply from: "${rootDir}/gradle/dependencies.gradle"

  plugins.withType(MavenPublishPlugin).withType(SigningPlugin) {
    apply plugin: "org.shipkit.travis"
    apply plugin: "org.shipkit.github-pom-contributors"
    apply plugin: "org.shipkit.release-notes"
    apply plugin: "org.shipkit.compare-publications"
    publishing {
      publications {
        tasks.downloadPreviousReleaseArtifacts.previousSourcesJarUrl =
            "https://repo1.maven.org/maven2/com/linkedin/coral/" + subproject.name + "/" + tasks.fetchReleaseNotes.previousVersion +
            subproject.name + "-" + tasks.fetchReleaseNotes.previousVersion + "-sources.jar"
        maven(MavenPublication) { publication ->
          tasks.performRelease.dependsOn(tasks.publish)
          from components.java
          artifact(javadocJar) {
            classifier = 'javadoc'
          }
          artifact(sourcesJar) {
            classifier = 'sources'
          }
          pom {
            groupId = 'com.linkedin.coral'
            artifactId = subproject.name
            name = 'Coral'
            description = 'Coral is a SQL analysis, translation, and rewrite engine'
            url = 'https://github.com/linkedin/coral'
            licenses {
              license {
                name = 'BSD 2-Clause License'
                url = 'https://opensource.org/licenses/BSD-2-Clause'
              }
            }
            developers {
              developer {
                id = 'wmoustafa'
                name = 'Walaa Eldin Moustafa'
              }
              developer {
                id = 'funcheetah'
                name = 'Wenye Zhang'
              }
              developer {
                id = 'shardulm94'
                name = 'Shardul Mahadik'
              }
              developer {
                id = 'hotsushi'
                name = 'Sushant Raikar'
              }
            }
            scm {
              connection = 'scm:git:git://github.com/linkedin/coral.git'
              developerConnection = 'scm:git:ssh://github.com:linkedin/coral.git'
              url = 'https://github.com/linkedin/coral/tree/master'
            }
          }
        }
      }
      repositories {
        def sonatypeUsername = System.getenv("SONATYPE_USER")
        def sonatypePassword = System.getenv("SONATYPE_PASSWORD")
        maven {
          name = "sonatypeSnapshot"
          url = "https://oss.sonatype.org/content/repositories/snapshots"
          credentials {
            username = sonatypeUsername
            password = sonatypePassword
          }
        }
        maven {
          name = "mavenCentral"
          url = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
          credentials {
            username = sonatypeUsername
            password = sonatypePassword
          }
        }
      }
    }

    // CORAL_GPG_PRIVATE_KEY should contain the armoured private key that
    // starts with -----BEGIN PGP PRIVATE KEY BLOCK-----
    // It can be obtained with gpg --armour --export-secret-keys KEY_ID
    def signingKey = System.getenv("CORAL_GPG_PRIVATE_KEY")
    def signingPassword = System.getenv("CORAL_GPG_PASSPHRASE")
    signing {
      required { signingKey != null && signingPassword != null }
      useInMemoryPgpKeys(signingKey, signingPassword)
      sign publishing.publications.maven
    }
  }
}
